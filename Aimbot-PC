local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local playerGui = player:WaitForChild("PlayerGui")

local AIM_OFFSET = Vector3.new(0, -0.5, 0)
local MAX_DISTANCE = 200
local TARGET_CHECK_INTERVAL = 0.1

local FOV_ENABLED = false
local FOV_SIZE = 100
local FOV_CIRCLE_VISIBLE = true

local isActive = false
local currentTarget = nil
local aimConnection = nil
local guiVisible = true
local lastTargetCheck = 0

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AimbotGUI"
screenGui.Parent = playerGui

local fovCircle = Instance.new("Frame")
fovCircle.Name = "FOVCircle"
fovCircle.Size = UDim2.new(0, FOV_SIZE * 2, 0, FOV_SIZE * 2)
fovCircle.Position = UDim2.new(0.5, -FOV_SIZE, 0.5, -FOV_SIZE)
fovCircle.BackgroundTransparency = 1
fovCircle.BorderSizePixel = 0
fovCircle.Parent = screenGui

local circleStroke = Instance.new("UIStroke")
circleStroke.Color = Color3.fromRGB(255, 255, 255)
circleStroke.Thickness = 2
circleStroke.Transparency = 0.3
circleStroke.Parent = fovCircle

local circleCorner = Instance.new("UICorner")
circleCorner.CornerRadius = UDim.new(1, 0)
circleCorner.Parent = fovCircle

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 320, 0, 420)
mainFrame.Position = UDim2.new(1, -330, 0, 10)
mainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = mainFrame

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
title.Text = "üéØ AIMBOT AUTO + FOV"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.Font = Enum.Font.SourceSansBold
title.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 12)
titleCorner.Parent = title

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(1, -20, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 50)
toggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
toggleButton.Text = "üî¥ DESATIVADO"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextScaled = true
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.Parent = mainFrame

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 10)
toggleCorner.Parent = toggleButton

local fovSection = Instance.new("Frame")
fovSection.Size = UDim2.new(1, -20, 0, 90)
fovSection.Position = UDim2.new(0, 10, 0, 110)
fovSection.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
fovSection.Parent = mainFrame

local fovCorner = Instance.new("UICorner")
fovCorner.CornerRadius = UDim.new(0, 8)
fovCorner.Parent = fovSection

local fovToggle = Instance.new("TextButton")
fovToggle.Size = UDim2.new(1, -10, 0, 25)
fovToggle.Position = UDim2.new(0, 5, 0, 5)
fovToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
fovToggle.Text = "üîò FOV: DESABILITADO"
fovToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
fovToggle.TextScaled = true
fovToggle.Font = Enum.Font.SourceSans
fovToggle.Parent = fovSection

local fovToggleCorner = Instance.new("UICorner")
fovToggleCorner.CornerRadius = UDim.new(0, 6)
fovToggleCorner.Parent = fovToggle

local fovLabel = Instance.new("TextLabel")
fovLabel.Size = UDim2.new(0.4, 0, 0, 20)
fovLabel.Position = UDim2.new(0, 5, 0, 35)
fovLabel.BackgroundTransparency = 1
fovLabel.Text = "Tamanho:"
fovLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
fovLabel.TextScaled = true
fovLabel.Font = Enum.Font.SourceSans
fovLabel.Parent = fovSection

local fovSizeBox = Instance.new("TextBox")
fovSizeBox.Size = UDim2.new(0.3, 0, 0, 20)
fovSizeBox.Position = UDim2.new(0.45, 0, 0, 35)
fovSizeBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
fovSizeBox.Text = tostring(FOV_SIZE)
fovSizeBox.TextColor3 = Color3.fromRGB(255, 255, 255)
fovSizeBox.TextScaled = true
fovSizeBox.Font = Enum.Font.SourceSans
fovSizeBox.Parent = fovSection

local fovSizeCorner = Instance.new("UICorner")
fovSizeCorner.CornerRadius = UDim.new(0, 4)
fovSizeCorner.Parent = fovSizeBox

local applyFovButton = Instance.new("TextButton")
applyFovButton.Size = UDim2.new(0.2, 0, 0, 20)
applyFovButton.Position = UDim2.new(0.78, 0, 0, 35)
applyFovButton.BackgroundColor3 = Color3.fromRGB(0, 120, 200)
applyFovButton.Text = "OK"
applyFovButton.TextColor3 = Color3.fromRGB(255, 255, 255)
applyFovButton.TextScaled = true
applyFovButton.Font = Enum.Font.SourceSansBold
applyFovButton.Parent = fovSection

local applyFovCorner = Instance.new("UICorner")
applyFovCorner.CornerRadius = UDim.new(0, 4)
applyFovCorner.Parent = applyFovButton

local circleToggle = Instance.new("TextButton")
circleToggle.Size = UDim2.new(1, -10, 0, 25)
circleToggle.Position = UDim2.new(0, 5, 0, 60)
circleToggle.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
circleToggle.Text = "üëÅÔ∏è C√çRCULO: VIS√çVEL"
circleToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
circleToggle.TextScaled = true
circleToggle.Font = Enum.Font.SourceSans
circleToggle.Parent = fovSection

local circleToggleCorner = Instance.new("UICorner")
circleToggleCorner.CornerRadius = UDim.new(0, 6)
circleToggleCorner.Parent = circleToggle

local aimSection = Instance.new("Frame")
aimSection.Size = UDim2.new(1, -20, 0, 100)
aimSection.Position = UDim2.new(0, 10, 0, 210)
aimSection.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
aimSection.Parent = mainFrame

local aimCorner = Instance.new("UICorner")
aimCorner.CornerRadius = UDim.new(0, 8)
aimCorner.Parent = aimSection

local aimTitle = Instance.new("TextLabel")
aimTitle.Size = UDim2.new(1, 0, 0, 20)
aimTitle.Position = UDim2.new(0, 0, 0, 5)
aimTitle.BackgroundTransparency = 1
aimTitle.Text = "üéØ AJUSTE DA MIRA"
aimTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
aimTitle.TextScaled = true
aimTitle.Font = Enum.Font.SourceSansBold
aimTitle.Parent = aimSection

local xLabel = Instance.new("TextLabel")
xLabel.Size = UDim2.new(0.15, 0, 0, 20)
xLabel.Position = UDim2.new(0, 5, 0, 30)
xLabel.BackgroundTransparency = 1
xLabel.Text = "X:"
xLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
xLabel.TextScaled = true
xLabel.Font = Enum.Font.SourceSans
xLabel.Parent = aimSection

local xBox = Instance.new("TextBox")
xBox.Size = UDim2.new(0.25, 0, 0, 20)
xBox.Position = UDim2.new(0.18, 0, 0, 30)
xBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
xBox.Text = tostring(AIM_OFFSET.X)
xBox.TextColor3 = Color3.fromRGB(255, 255, 255)
xBox.TextScaled = true
xBox.Font = Enum.Font.SourceSans
xBox.Parent = aimSection

local xBoxCorner = Instance.new("UICorner")
xBoxCorner.CornerRadius = UDim.new(0, 4)
xBoxCorner.Parent = xBox

local yLabel = Instance.new("TextLabel")
yLabel.Size = UDim2.new(0.15, 0, 0, 20)
yLabel.Position = UDim2.new(0.5, 0, 0, 30)
yLabel.BackgroundTransparency = 1
yLabel.Text = "Y:"
yLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
yLabel.TextScaled = true
yLabel.Font = Enum.Font.SourceSans
yLabel.Parent = aimSection

local yBox = Instance.new("TextBox")
yBox.Size = UDim2.new(0.25, 0, 0, 20)
yBox.Position = UDim2.new(0.68, 0, 0, 30)
yBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
yBox.Text = tostring(AIM_OFFSET.Y)
yBox.TextColor3 = Color3.fromRGB(255, 255, 255)
yBox.TextScaled = true
yBox.Font = Enum.Font.SourceSans
yBox.Parent = aimSection

local yBoxCorner = Instance.new("UICorner")
yBoxCorner.CornerRadius = UDim.new(0, 4)
yBoxCorner.Parent = yBox

local zLabel = Instance.new("TextLabel")
zLabel.Size = UDim2.new(0.15, 0, 0, 20)
zLabel.Position = UDim2.new(0, 5, 0, 55)
zLabel.BackgroundTransparency = 1
zLabel.Text = "Z:"
zLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
zLabel.TextScaled = true
zLabel.Font = Enum.Font.SourceSans
zLabel.Parent = aimSection

local zBox = Instance.new("TextBox")
zBox.Size = UDim2.new(0.25, 0, 0, 20)
zBox.Position = UDim2.new(0.18, 0, 0, 55)
zBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
zBox.Text = tostring(AIM_OFFSET.Z)
zBox.TextColor3 = Color3.fromRGB(255, 255, 255)
zBox.TextScaled = true
zBox.Font = Enum.Font.SourceSans
zBox.Parent = aimSection

local zBoxCorner = Instance.new("UICorner")
zBoxCorner.CornerRadius = UDim.new(0, 4)
zBoxCorner.Parent = zBox

local applyAimButton = Instance.new("TextButton")
applyAimButton.Size = UDim2.new(0.25, 0, 0, 20)
applyAimButton.Position = UDim2.new(0.68, 0, 0, 55)
applyAimButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
applyAimButton.Text = "APLICAR"
applyAimButton.TextColor3 = Color3.fromRGB(255, 255, 255)
applyAimButton.TextScaled = true
applyAimButton.Font = Enum.Font.SourceSansBold
applyAimButton.Parent = aimSection

local applyAimCorner = Instance.new("UICorner")
applyAimCorner.CornerRadius = UDim.new(0, 4)
applyAimCorner.Parent = applyAimButton

local resetAimButton = Instance.new("TextButton")
resetAimButton.Size = UDim2.new(1, -10, 0, 20)
resetAimButton.Position = UDim2.new(0, 5, 0, 80)
resetAimButton.BackgroundColor3 = Color3.fromRGB(150, 100, 0)
resetAimButton.Text = "üîÑ RESETAR (0, -0.5, 0)"
resetAimButton.TextColor3 = Color3.fromRGB(255, 255, 255)
resetAimButton.TextScaled = true
resetAimButton.Font = Enum.Font.SourceSans
resetAimButton.Parent = aimSection

local resetAimCorner = Instance.new("UICorner")
resetAimCorner.CornerRadius = UDim.new(0, 4)
resetAimCorner.Parent = resetAimButton

local infoSection = Instance.new("Frame")
infoSection.Size = UDim2.new(1, -20, 0, 60)
infoSection.Position = UDim2.new(0, 10, 0, 320)
infoSection.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
infoSection.Parent = mainFrame

local infoCorner = Instance.new("UICorner")
infoCorner.CornerRadius = UDim.new(0, 8)
infoCorner.Parent = infoSection

local targetLabel = Instance.new("TextLabel")
targetLabel.Size = UDim2.new(1, -10, 0, 20)
targetLabel.Position = UDim2.new(0, 5, 0, 5)
targetLabel.BackgroundTransparency = 1
targetLabel.Text = "Alvo: Nenhum"
targetLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
targetLabel.TextScaled = true
targetLabel.Font = Enum.Font.SourceSans
targetLabel.Parent = infoSection

local distanceLabel = Instance.new("TextLabel")
distanceLabel.Size = UDim2.new(1, -10, 0, 20)
distanceLabel.Position = UDim2.new(0, 5, 0, 25)
distanceLabel.BackgroundTransparency = 1
distanceLabel.Text = "Dist√¢ncia: --"
distanceLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
distanceLabel.TextScaled = true
distanceLabel.Font = Enum.Font.SourceSans
distanceLabel.Parent = infoSection

local hideButton = Instance.new("TextButton")
hideButton.Size = UDim2.new(1, -20, 0, 25)
hideButton.Position = UDim2.new(0, 10, 0, 390)
hideButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
hideButton.Text = "üëÅÔ∏è ESCONDER (H)"
hideButton.TextColor3 = Color3.fromRGB(255, 255, 255)
hideButton.TextScaled = true
hideButton.Font = Enum.Font.SourceSans
hideButton.Parent = mainFrame

local hideCorner = Instance.new("UICorner")
hideCorner.CornerRadius = UDim.new(0, 6)
hideCorner.Parent = hideButton

local showButton = Instance.new("TextButton")
showButton.Size = UDim2.new(0, 100, 0, 30)
showButton.Position = UDim2.new(1, -110, 0, 10)
showButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
showButton.Text = "üéØ MOSTRAR"
showButton.TextColor3 = Color3.fromRGB(255, 255, 255)
showButton.TextScaled = true
showButton.Font = Enum.Font.SourceSansBold
showButton.Visible = false
showButton.Parent = screenGui

local showCorner = Instance.new("UICorner")
showCorner.CornerRadius = UDim.new(0, 8)
showCorner.Parent = showButton

local function updateFOVCircle()
    fovCircle.Size = UDim2.new(0, FOV_SIZE * 2, 0, FOV_SIZE * 2)
    fovCircle.Position = UDim2.new(0.5, -FOV_SIZE, 0.5, -FOV_SIZE)
    fovCircle.Visible = FOV_CIRCLE_VISIBLE
end

local function isInFOV(targetPosition)
    if not FOV_ENABLED then
        return true
    end
    
    local screenPoint, onScreen = camera:WorldToScreenPoint(targetPosition)
    if not onScreen then
        return false
    end
    
    local screenCenter = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    local targetPoint = Vector2.new(screenPoint.X, screenPoint.Y)
    local distance = (targetPoint - screenCenter).Magnitude
    
    return distance <= FOV_SIZE
end

local function toggleGUI()
    guiVisible = not guiVisible
    
    if guiVisible then
        mainFrame.Visible = true
        showButton.Visible = false
        fovCircle.Visible = FOV_CIRCLE_VISIBLE
    else
        mainFrame.Visible = false
        showButton.Visible = true
        fovCircle.Visible = false
    end
end

local function isTargetValid(target)
    if not target or not target.Character then
        return false
    end
    
    if target.Team and player.Team and target.Team == player.Team then
        return false
    end
    
    local humanoid = target.Character:FindFirstChild("Humanoid")
    local head = target.Character:FindFirstChild("Head")
    local hrp = target.Character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or humanoid.Health <= 0 then
        return false
    end
    
    if not head or not hrp then
        return false
    end
    
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local distance = (hrp.Position - player.Character.HumanoidRootPart.Position).Magnitude
        if distance > MAX_DISTANCE then
            return false
        end
    end
    
    if not isInFOV(head.Position) then
        return false
    end
    
    return true
end

local function findClosestPlayer(fromCrosshair)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    
    local referencePosition
    
    if fromCrosshair then
        local screenCenter = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
        local ray = camera:ScreenPointToRay(screenCenter.X, screenCenter.Y)
        referencePosition = ray.Origin + ray.Direction * 100
    else
        referencePosition = player.Character.HumanoidRootPart.Position
    end
    
    local closestPlayer = nil
    local closestDistance = fromCrosshair and math.huge or MAX_DISTANCE
    
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            if otherPlayer.Team and player.Team and otherPlayer.Team == player.Team then
                continue
            end
            
            local otherHRP = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
            local otherHead = otherPlayer.Character:FindFirstChild("Head")
            local otherHumanoid = otherPlayer.Character:FindFirstChild("Humanoid")
            
            if otherHRP and otherHead and otherHumanoid and otherHumanoid.Health > 0 then
                local distance
                
                if fromCrosshair then
                    distance = (otherHead.Position - referencePosition).Magnitude
                    
                    if not isInFOV(otherHead.Position) then
                        continue
                    end
                else
                    distance = (otherHRP.Position - referencePosition).Magnitude
                    
                    if FOV_ENABLED and not isInFOV(otherHead.Position) then
                        continue
                    end
                    
                    if distance > MAX_DISTANCE then
                        continue
                    end
                end
                
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end
    end
    
    return closestPlayer, closestDistance
end

local function switchToNextTarget()
    local newTarget, distance = findClosestPlayer(true)
    
    if not newTarget then
        newTarget, distance = findClosestPlayer(false)
    end
    
    if newTarget then
        currentTarget = newTarget
        targetLabel.Text = "Alvo: " .. newTarget.Name
        distanceLabel.Text = "Dist√¢ncia: " .. math.floor(distance) .. " studs"
        return true
    else
        currentTarget = nil
        local fovStatus = FOV_ENABLED and " (FOV ativo)" or ""
        targetLabel.Text = "Alvo: Nenhum jogador pr√≥ximo" .. fovStatus
        distanceLabel.Text = "Dist√¢ncia: --"
        return false
    end
end

local function lockOnTarget()
    local currentTime = tick()
    
    if currentTime - lastTargetCheck > TARGET_CHECK_INTERVAL then
        lastTargetCheck = currentTime
        
        if not isTargetValid(currentTarget) then
            if not switchToNextTarget() then
                return
            end
        end
    end
    
    if not currentTarget or not currentTarget.Character then
        return
    end
    
    local head = currentTarget.Character:FindFirstChild("Head")
    local humanoidRootPart = currentTarget.Character:FindFirstChild("HumanoidRootPart")
    
    if not head or not humanoidRootPart then
        return
    end
    
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local distance = (humanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
        distanceLabel.Text = "Dist√¢ncia: " .. math.floor(distance) .. " studs"
    end
    
    local headPosition = head.Position + AIM_OFFSET
    local currentPosition = camera.CFrame.Position
    
    camera.CFrame = CFrame.lookAt(currentPosition, headPosition)
end

local function toggleAimbot()
    isActive = not isActive
    
    if isActive then
        local target, distance = findClosestPlayer(false)
        
        if target then
            currentTarget = target
            targetLabel.Text = "Alvo: " .. target.Name
            distanceLabel.Text = "Dist√¢ncia: " .. math.floor(distance) .. " studs"
            
            toggleButton.Text = "üîí TRAVADO"
            toggleButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
            
            aimConnection = RunService.Heartbeat:Connect(lockOnTarget)
        else
            local fovStatus = FOV_ENABLED and " (FOV ativo)" or ""
            targetLabel.Text = "Alvo: Nenhum jogador pr√≥ximo" .. fovStatus
            distanceLabel.Text = "Dist√¢ncia: --"
            isActive = false
        end
    else
        toggleButton.Text = "üî¥ DESATIVADO"
        toggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
        
        if aimConnection then
            aimConnection:Disconnect()
            aimConnection = nil
        end
        
        currentTarget = nil
        targetLabel.Text = "Alvo: Nenhum"
        distanceLabel.Text = "Dist√¢ncia: --"
    end
end

local function toggleFOV()
    FOV_ENABLED = not FOV_ENABLED
    
    if FOV_ENABLED then
        fovToggle.Text = "üü¢ FOV: HABILITADO"
        fovToggle.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
    else
        fovToggle.Text = "üîò FOV: DESABILITADO"
        fovToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    end
    
    updateFOVCircle()
end

local function toggleCircle()
    FOV_CIRCLE_VISIBLE = not FOV_CIRCLE_VISIBLE
    
    if FOV_CIRCLE_VISIBLE then
        circleToggle.Text = "üëÅÔ∏è C√çRCULO: VIS√çVEL"
        circleToggle.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
    else
        circleToggle.Text = "üö´ C√çRCULO: OCULTO"
        circleToggle.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
    end
    
    updateFOVCircle()
end

local function updateAimOffset()
    local x = tonumber(xBox.Text) or 0
    local y = tonumber(yBox.Text) or -0.5
    local z = tonumber(zBox.Text) or 0
    
    AIM_OFFSET = Vector3.new(x, y, z)
    
    xBox.Text = tostring(x)
    yBox.Text = tostring(y)
    zBox.Text = tostring(z)
end

local function resetAimOffset()
    AIM_OFFSET = Vector3.new(0, -0.5, 0)
    xBox.Text = "0"
    yBox.Text = "-0.5"
    zBox.Text = "0"
end

toggleButton.MouseButton1Click:Connect(toggleAimbot)
hideButton.MouseButton1Click:Connect(toggleGUI)
showButton.MouseButton1Click:Connect(toggleGUI)
fovToggle.MouseButton1Click:Connect(toggleFOV)
circleToggle.MouseButton1Click:Connect(toggleCircle)
applyAimButton.MouseButton1Click:Connect(updateAimOffset)
resetAimButton.MouseButton1Click:Connect(resetAimOffset)

applyFovButton.MouseButton1Click:Connect(function()
    local newSize = tonumber(fovSizeBox.Text)
    if newSize and newSize > 10 and newSize <= 500 then
        FOV_SIZE = newSize
        fovSizeBox.Text = tostring(FOV_SIZE)
        updateFOVCircle()
    else
        fovSizeBox.Text = tostring(FOV_SIZE)
    end
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.F then
        toggleAimbot()
    end
    
    if input.KeyCode == Enum.KeyCode.H then
        toggleGUI()
    end
    
    if input.KeyCode == Enum.KeyCode.X then
        if isActive then
            toggleAimbot()
        end
    end
    
    if input.KeyCode == Enum.KeyCode.T then
        if isActive then
            switchToNextTarget()
        end
    end
    
    if input.KeyCode == Enum.KeyCode.G then
        toggleFOV()
    end
    
    if input.KeyCode == Enum.KeyCode.C then
        toggleCircle()
    end
end)

updateFOVCircle()
